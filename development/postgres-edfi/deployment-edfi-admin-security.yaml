
apiVersion: apps/v1
kind: Deployment
metadata:
  name: edfi-admin-security-db
spec:
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  replicas: 1
  selector:
    matchLabels:
      app: edfi-admin-security-db
  template:
    metadata:
      labels:
        app: edfi-admin-security-db
    spec:
      containers:
      - name: db-admin-security
        image: edfialliance/ods-api-db-admin:v2.1.0
        resources:
          limits:
            memory: "1Gi"
            cpu: "1"
        env:
          - name: POSTGRES_USER
            value: "postgres"
          - name: POSTGRES_PASSWORD
            value: "Winter2022!"
          - name: API_MODE
            value: "YearSpecific"
          - name: PGDATA
            value: /var/lib/postgresql/data/pgdata
        ports:
          - containerPort: 5432
        volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: postgredb
      - name: pgbouncer-db-admin-security
        image: edoburu/pgbouncer:1.9.0
        args:
          - "/usr/bin/pgbouncer"
          - "/etc/pgbouncer/pgbouncer.ini"
          - "-q"
        env:
          - name: DB_HOST
            value: db-admin-security
          - name: DB_PASSWORD
            value: "Winter2022!"
          - name: DB_USER
            value: "postgres"
          - name: LISTEN_PORT
            value: "6432"
          - name: POOL_MODE
            value: "session"
        ports:
          - containerPort: 6432
        livenessProbe:
          tcpSocket:
            port: 6432
          periodSeconds: 60
        lifecycle:
          preStop:
            exec:
              # Allow existing queries clients to complete within 120 seconds
              command: ["/bin/sh", "-c", "killall -INT pgbouncer && sleep 120"]
      volumes:
        - name: postgredb
          persistentVolumeClaim:
            claimName: pv-db-edfi-admin-security
